(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{379:function(t,s,a){t.exports=a.p+"assets/img/webhook.935b2574.png"},380:function(t,s,a){t.exports=a.p+"assets/img/webhook1.cad7f85f.png"},381:function(t,s,a){t.exports=a.p+"assets/img/webhook2.ee90c5e0.png"},382:function(t,s,a){t.exports=a.p+"assets/img/webhook3.f5ce6c21.png"},419:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"webhook-是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webhook-是什么"}},[t._v("#")]),t._v(" webhook 是什么?")]),t._v(" "),n("p",[t._v("简单来讲,webhook就是你放在git仓库的一个通知员，一旦你的仓库里发生了什么事情，这个通知员就会用你留下的对应标记通知你")]),t._v(" "),n("h2",{attrs:{id:"为什么要用到-webhook"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用到-webhook"}},[t._v("#")]),t._v(" 为什么要用到 webhook?")]),t._v(" "),n("p",[t._v("借助webhook，我们可以实现很多自动化流程。比如部署一个应用到服务器，本地提交代码后，只需要push 到git 仓库，github网站自动触发webhook，然后服务器上将本地提交的\n最新代码用 git pull 抓取并进行重新部署")]),t._v(" "),n("h2",{attrs:{id:"具体使用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#具体使用方法"}},[t._v("#")]),t._v(" 具体使用方法")]),t._v(" "),n("ul",[n("li",[n("font",{attrs:{face:"黑体",color:"red",size:"5"}},[t._v("-----在github 上打开对应项目，找到 seetings")]),t._v(" "),n("img",{attrs:{src:a(379),alt:"solar"}}),t._v(" "),n("img",{attrs:{src:a(380),alt:"solar"}})],1),t._v(" "),n("li",[n("font",{attrs:{face:"黑体",color:"red",size:"5"}},[t._v("-----设置对应的webhook 选项")]),t._v(" "),n("img",{attrs:{src:a(381),alt:"solar"}})],1)]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("Payload URL : 这里是指定的一个应用的URL，该url对应的应用监听github 网站推送事件(http://自己的域名/path（随便取一个路径）)。\nContent type： application/json会将JSON payload直接放置POST的body中。\nSecret: 设置一个常用密码。\nEvents： Events是webhook的核心。只要对存储库执行某项操作，就会触发这些webhook，服务器的有效负载URL会拦截并执行操作。")])]),t._v(" "),n("ul",[n("li",[n("font",{attrs:{face:"黑体",color:"red",size:"5"}},[t._v("-----配置接收和管理负载的服务器")]),t._v("\n本地新建一个node项目,安装一个 github-webhook-handler 的中间件，可以使用")],1)]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g github-webhook-handler //全局安装\n")])])]),n("p",[t._v("新建一个index.js 文件，和一个 sh 脚本文件。生成如下项目目录\n"),n("img",{attrs:{src:a(382),alt:"solar"}}),t._v("\n其中index.js 文件中配置的内容(参考https://www.npmjs.com/package/github-webhook-handler 网站)")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("    var http "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    var spawn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".spawn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    var createHandler "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github-webhook-handler'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    // 下面填写的myscrect跟github webhooks配置一样，下一步会说；path是我们当时设置的访问路径\n    var handler "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" createHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/auto_build'")]),t._v(", secret: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ying4786'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n\n    http.createServer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("function "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req, res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req, res, "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        res.statusCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res.end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no such location'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".listen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6666")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    handler.on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console.error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error:'")]),t._v(", err.message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    // 监听到push事件的时候执行我们的自动化脚本\n    handler.on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Received a push event for %s to %s'")]),t._v(",\n        event.payload.repository.name,\n        event.payload.ref"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      rumCommand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./auto_build.sh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" txt "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" rumCommand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" cmd, args, callback "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      var child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" spawn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" cmd, args "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("设置 自动部署 脚本(本项目中的./auto_build.sh 文件)")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/bash")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v("  /cyy/docBlog/docBlog  //服务器中放置的对应部署项目的文件夹路径\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n")])])]),n("p",[t._v("将这个node服务项目推送到服务器上,通过pm2 启动此服务\n至此。本地blog 项目可以完成在本地提交代码到仓库可以实时更新到线上的效果")])])}),[],!1,null,null,null);s.default=e.exports}}]);